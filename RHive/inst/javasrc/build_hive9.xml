<project name="rhive_udf" basedir="./" default="main">
    <property name="src.dir"             value="src"/>
    <property name="src.dir.hive-0.9"    value="src2/hive-0.9"/>
    <property name="src.dir.hive-0.10"   value="src2/hive-0.10"/>
    <property name="lib.dir"             value="lib"/>
    <property name="build.dir"           value="build"/>
    <property name="classes.dir"         value="${build.dir}/classes"/>
    <property name="jar.dir"             value="${build.dir}/jar"/>
    <property name="R.dir"               value="../../"/>
    <property name="javac.debug"         value="on"/>
    <property name="javac.optimize"      value="on"/>
    <property name="javac.deprecation"   value="on"/>
    <property name="javac.version"       value="1.6"/>
    <property name="javac.args"          value=""/>
    <property name="javac.args.warnings" value="-Xlint:unchecked"/>

    <property environment="env"/>
    <path id="classpath">
        <fileset dir="./"                    includes="**/*.jar"/>
        <fileset dir="${lib.dir}"            includes="*.jar"/>
        <fileset dir="${env.HIVE_HOME}/lib/" includes="**/*.jar"/>
    </path>
    <target name="checkenv">
        <if>
            <equals arg1="${env.HIVE_HOME}" arg2 = "" />
            <then>
                <echo message="ERROR! HIVE_HOME is empty!" />
            </then>
            <else>
                <echo message="HIVE_HOME=${env.HIVE_HOME}" />
            </else>
        </if>
    </target>
    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <target name="copy.hive10.files">
    <copy todir="${src.dir}/com/nexr/rhive/hive/udf/" overwrite="true">
            <fileset dir="${src.dir.hive-0.10}"/>
        </copy>
    </target>

    <target name="copy.hive.files">
        <copy todir="${src.dir}/com/nexr/rhive/hive/udf/" overwrite="true">
            <fileset dir="${src.dir.hive-0.9}"/>
        </copy>
    </target>

    <target name="compile">
        <delete file="${ant.project.name}.jar"/>

        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" includes="**/*.java" destdir="${classes.dir}" classpathref="classpath"
               optimize="${javac.optimize}"
               target="${javac.version}"
               source="${javac.version}"
               deprecation="${javac.deprecation}"
               debug="${javac.debug}"
               debuglevel="lines,vars,source"
               includeantruntime="false">
            <compilerarg line="${javac.args.warnings}"/>
        </javac>
        <unjar dest="${classes.dir}">
            <fileset dir=".">
                <include name="lib/REngine.jar"/>
                <include name="lib/RserveEngine.jar"/>
                <include name="JRI.jar"/>
            </fileset>
        </unjar>
    </target>

    <target name="jar" depends="compile">
        <property name="version.num" value="1"/>
        <buildnumber file="build.num"/>

        <jar destfile="${ant.project.name}.jar" basedir="${classes.dir}">
            <manifest>
                <attribute name="Built-By" value="NexR"/>
                <attribute name="Implementation-Version" value="${version.num}-b${build.number}"/>
            </manifest>
        </jar>
    </target>

    <target name="cpy" depends="jar">
        <delete file="${R.dir}/inst/java/${ant.project.name}.jar"/>
        <copy file="${ant.project.name}.jar" todir="${R.dir}/inst/java/"/>
        <copy file="${ant.project.name}.jar" todir="${env.HIVE_HOME}/lib/"/>
        <delete file="${ant.project.name}.jar"/>
    </target>

    <target name="main-clean" depends="clean"/>
    <target name="main" depends='copy.hive.files,jar,cpy'/>
</project>


